
// ID of the bot (from Groupme)
var botId = "BOT_ID_GOES_HERE";
// ID of the pokemon info spreadsheet (from Google)
var infoSheetId = "INFO_SHEET_ID_GOES_HERE";
// ID of the locations spreadsheet (from Google)
var locationSheetId = "LOCATION_SHEET_ID_GOES_HERE";
    
// send text to the group as a message
function sendText(text){
  UrlFetchApp.fetch("https://api.groupme.com/v3/bots/post", {"method":"post", "payload":'{"bot_id":"' + botId + '","text":"' + text + '"}'})
}

//respond to messages sent to the group. Recieved as POST
//this method is automatically called whenever the Web App's (to be) URL is called
function doPost(e){
  var post = JSON.parse(e.postData.getDataAsString());
  var text = post.text;
  var name = post.name
  
  if (text.toLowerCase().substring(0, 5) == "!help") {
    var texttosend = "Hello there!  I'm a bot!  Here's my command list: \\n";
    texttosend = texttosend + " !where <word> - gives the location of a gym.  Use words in the gym name, or the gym's nickname.\\n";
    texttosend = texttosend + " !info <name> - gives information about a pokemon.  Use the name or partial name.";
    
    sendText(texttosend);
  }
  
  if (text.toLowerCase().substring(0, 7) == "!where ") {
    var loc = text.replace("!where ", "");
    if (loc == "")
      sendText("Error: No loc was given");
    else
      showLocation(loc);
  }
  
  if (text.toLowerCase().substring(0, 6) == "!info ") {
    var mon = text.replace("!info ", "");
    if (mon == "")
      sendText("Error: No name was given");
    else
      showPokemon(mon);
  }
}

function showLocation(text) {
  var sheet  = SpreadsheetApp.openById(locationSheetId);
  var data = sheet.getDataRange().getValues();
  var responsecount = 0;
  
  for (var i = 0; i<data.length; i++) {
    var gymname = (data[i][0]).toString().toLowerCase();
    var gymalias = data[i][1].toString().toLowerCase();
    var expossible = data[i][4].toString();
    var comment = data[i][5].toString();
    var query = text.toLowerCase();
    if ((gymname.indexOf(query) >= 0) || (gymalias.indexOf(query) >= 0)) {
      responsecount = responsecount + 1;
      var texttosend = "";
      if (responsecount < 3) {
        texttosend = texttosend + "Gym Name: " + data[i][0] + "\\n";
        if (gymalias.length > 0) {
          texttosend = texttosend + "Also Known as: " + data[i][1] + "\\n";
        }
        if (expossible.length > 0) {
          texttosend = texttosend + "EX Raid Gym!\\n";
        }
        if (comment.length > 0) {
          texttosend = texttosend + "Comments: " + comment + "\\n";
        }
        texttosend = texttosend + "Address: " + data[i][2] + "\\n";
        texttosend = texttosend + "http://maps.google.com/maps?q=" + data[i][3];
        sendText(texttosend);
      }
    }
  }
}

function showPokemon(text) {
  var sheet = SpreadsheetApp.openById("1RWf2aNQaxcKXN3jFMptGbTxG0kr6_RtfAulHqLrckoc");
  var data = sheet.getDataRange().getValues();
  var responsecount = 0;

  for (var i = 1; i<data.length; i++) {
    var pokemonname = (data[i][1]).toString().toLowerCase();
    var query = text.toLowerCase();
    if (pokemonname.indexOf(query) >= 0) {
      responsecount = responsecount + 1;
      
      var atk = data[i][4];
      var def = data[i][5];
      var sta = data[i][3];
      var lvl20mult = 0.59740001;
      var lvl25mult = 0.667934;
      
      var lvl20cp = ((atk+15.0)*Math.pow(def+15.0,0.5)*Math.pow(sta+15.0,0.5)*Math.pow(lvl20mult,2)/10);
      var lvl25cp = ((atk+15.0)*Math.pow(def+15.0,0.5)*Math.pow(sta+15.0,0.5)*Math.pow(lvl25mult,2)/10);
      var lvl20nun = ((atk+10.0)*Math.pow(def+10.0,0.5)*Math.pow(sta+10.0,0.5)*Math.pow(lvl20mult,2)/10);
      var lvl25nun = ((atk+10.0)*Math.pow(def+10.0,0.5)*Math.pow(sta+10.0,0.5)*Math.pow(lvl25mult,2)/10);
      
      var type1 = data[i][6];
      var type2 = data[i][7];
      
      var weakto = "";
      var strongagainst = "";
      var weatherboost = "";
      switch (type1) {
        case "normal":
          weakto = weakto + "fighting";
          strongagainst = strongagainst + "ghost";
          weatherboost = weatherboost + "partly cloudy";
          break;
        case "fighting":
          weakto = weakto + "fairy, flying, psychic";
          strongagainst = strongagainst + "bug, dark, rock";
          weatherboost = weatherboost + "cloudy";
          break;
        case "flying":
          weakto = weakto + "electric, ice, rock";
          strongagainst = strongagainst + "bug, fighting, grass, ground";
          weatherboost = weatherboost + "windy";
          break;
        case "poison":
          weakto = weakto + "ground, psychic";
          strongagainst = strongagainst + "bug, fairy, fighting, grass, poison";
          weatherboost = weatherboost + "cloudy";
          break;
        case "ground":
          weakto = weakto + "grass, ice, water";
          strongagainst = strongagainst + "poison, rock, electric";
          weatherboost = weatherboost + "clear";
          break;
        case "rock":
          weakto = weakto + "fighting, grass, ground, steel, water";
          strongagainst = strongagainst + "fire, flying, normal, poison";
          weatherboost = weatherboost + "partly cloudy";
          break;
        case "bug":
          weakto = weakto + "fire, flying, rock";
          strongagainst = strongagainst + "fighting, grass, ground";
          weatherboost = weatherboost + "rain";
          break;
        case "ghost":
          weakto = weakto + "ghost, dark";
          strongagainst = strongagainst + "bug, poison, normal, fighting";
          weatherboost = weatherboost + "fog";
          break;
        case "steel":
          weakto = weakto + "fighting, fire, ground";
          strongagainst = strongagainst + "bug, dragon, fairy, flying, grass, ice, normal, psychic, rock, steel, poison";
          weatherboost = weatherboost + "snow";
          break;
        case "fire":
          weakto = weakto + "ground, rock, water";
          strongagainst = strongagainst + "bug, fairy, fire, grass, ice, steel";
          weatherboost = weatherboost + "clear";
          break;
        case "water":
          weakto = weakto + "electric, grass";
          strongagainst = strongagainst + "fire, ice, steel, water";
          weatherboost = weatherboost + "rain";
          break;
        case "grass":
          weakto = weakto + "bug, fire, flying, ice, poison";
          strongagainst = strongagainst + "electric, grass, ground, water";
          weatherboost = weatherboost + "clear";
          break;
        case "electric":
          weakto = weakto + "ground";
          strongagainst = strongagainst + "electric, flying, steel";
          weatherboost = weatherboost + "rain";
          break;
        case "psychic":
          weakto = weakto + "bug, dark, ghost";
          strongagainst = strongagainst + "fighting, psychic";
          weatherboost = weatherboost + "windy";
          break;
        case "ice":
          weakto = weakto + "fighting, fire, rock, steel";
          strongagainst = strongagainst + "ice";
          weatherboost = weatherboost + "snow";
          break;
        case "dark":
          weakto = weakto + "bug, fighting, fairy";
          strongagainst = strongagainst + "dark, ghost, psychic";
          weatherboost = weatherboost + "fog";
          break;
        case "dragon":
          weakto = weakto + "dragon, ice, fairy";
          strongagainst = strongagainst + "electric, fire, grass, water";
          weatherboost = weatherboost + "windy";
          break;
        case "fairy":
          weakto = weakto + "poison, steel";
          strongagainst = strongagainst + "bug, dark, fighting, dragon";
          weatherboost = weatherboost + "cloudy";
          break;
      }
      if (type2.length > 0) {
        weakto = weakto + ", ";
        strongagainst = strongagainst + ", ";
        weatherboost = weatherboost + ", ";
        switch (type2) {
        case "normal":
          weakto = weakto + "fighting";
          strongagainst = strongagainst + "ghost";
          weatherboost = weatherboost + "partly cloudy";
          break;
        case "fighting":
          weakto = weakto + "fairy, flying, psychic";
          strongagainst = strongagainst + "bug, dark, rock";
          weatherboost = weatherboost + "cloudy";
          break;
        case "flying":
          weakto = weakto + "electric, ice, rock";
          strongagainst = strongagainst + "bug, fighting, grass, ground";
          weatherboost = weatherboost + "windy";
          break;
        case "poison":
          weakto = weakto + "ground, psychic";
          strongagainst = strongagainst + "bug, fairy, fighting, grass, poison";
          weatherboost = weatherboost + "cloudy";
          break;
        case "ground":
          weakto = weakto + "grass, ice, water";
          strongagainst = strongagainst + "poison, rock, electric";
          weatherboost = weatherboost + "clear";
          break;
        case "rock":
          weakto = weakto + "fighting, grass, ground, steel, water";
          strongagainst = strongagainst + "fire, flying, normal, poison";
          weatherboost = weatherboost + "partly cloudy";
          break;
        case "bug":
          weakto = weakto + "fire, flying, rock";
          strongagainst = strongagainst + "fighting, grass, ground";
          weatherboost = weatherboost + "rain";
          break;
        case "ghost":
          weakto = weakto + "ghost, dark";
          strongagainst = strongagainst + "bug, poison, normal, fighting";
          weatherboost = weatherboost + "fog";
          break;
        case "steel":
          weakto = weakto + "fighting, fire, ground";
          strongagainst = strongagainst + "bug, dragon, fairy, flying, grass, ice, normal, psychic, rock, steel, poison";
          weatherboost = weatherboost + "snow";
          break;
        case "fire":
          weakto = weakto + "ground, rock, water";
          strongagainst = strongagainst + "bug, fairy, fire, grass, ice, steel";
          weatherboost = weatherboost + "clear";
          break;
        case "water":
          weakto = weakto + "electric, grass";
          strongagainst = strongagainst + "fire, ice, steel water";
          weatherboost = weatherboost + "rain";
          break;
        case "grass":
          weakto = weakto + "bug, fire, flying, ice, poison";
          strongagainst = strongagainst + "electric, grass, ground, water";
          weatherboost = weatherboost + "clear";
          break;
        case "electric":
          weakto = weakto + "ground";
          strongagainst = strongagainst + "electric, flying, steel";
          weatherboost = weatherboost + "rain";
          break;
        case "psychic":
          weakto = weakto + "bug, dark, ghost";
          strongagainst = strongagainst + "fighting, psychic";
          weatherboost = weatherboost + "windy";
          break;
        case "ice":
          weakto = weakto + "fighting, fire, rock, steel";
          strongagainst = strongagainst + "ice";
          weatherboost = weatherboost + "snow";
          break;
        case "dark":
          weakto = weakto + "bug, fighting, fairy";
          strongagainst = strongagainst + "dark, ghost, psychic";
          weatherboost = weatherboost + "fog";
          break;
        case "dragon":
          weakto = weakto + "dragon, ice, fairy";
          strongagainst = strongagainst + "electric, fire, grass, water";
          weatherboost = weatherboost + "windy";
          break;
        case "fairy":
          weakto = weakto + "poison, steel";
          strongagainst = strongagainst + "bug, dark, fighting, dragon";
          weatherboost = weatherboost + "cloudy";
          break;
        }
      }
      
      // billylink
      var billylink = data[i][10].toString();
      
      var texttosend = "";
      if (responsecount < 3) {
        // name
        texttosend = data[i][1] + "\\n";
        // type
        texttosend = texttosend + "Type: " + type1;
        if (type2.length > 0) {
          texttosend = texttosend + ", " + type2;
        }
        texttosend = texttosend + "\\n";
        // weak to
        texttosend = texttosend + "Attack With: " + weakto + "\\n";
        // strong against
        texttosend = texttosend + "Avoid Using: " + strongagainst + "\\n";
        // weather boost
        texttosend = texttosend + "Weather Boost: " + weatherboost + "\\n";
        // raid cps
        texttosend = texttosend + "Max IV Raid CP (normal): " + Math.floor(lvl20cp).toString() + "   (boosted): " + Math.floor(lvl25cp).toString() + "\\n";
        texttosend = texttosend + "Min IV Raid CP (normal): " + Math.floor(lvl20nun).toString() + "   (boosted): " + Math.floor(lvl25nun).toString() + "\\n";
        // link
        texttosend = texttosend + "https://db.pokemongohub.net/pokemon/" + data[i][0];
        // billy link
        if (billylink.length > 0) {
          texttosend = texttosend + "\\n" + billylink;
        }

        sendText(texttosend);
      }
      
      // if this is an exact match, don't look for more
      if (pokemonname == query) {
        responsecount = 100;
      }
    }
  }
}
